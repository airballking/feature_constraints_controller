<launch>

  <!-- load the filter parameters for the constraint velocity estimation onto the server -->
  <rosparam command="load" ns="left_arm_feature_controller"
            file="$(find feature_constraints_standalone)/launch/constraint_velocity_filter_chain_params.yaml"/>
  <rosparam command="load" ns="right_arm_feature_controller"
            file="$(find feature_constraints_standalone)/launch/constraint_velocity_filter_chain_params.yaml"/>

  <!-- Start nodes that handle visualization of the spatulas and the table -->
  <node name="r_spatula_model" pkg="itasc" type="spatula_model_bremen_1.py" args="/r_spatula" />
  <node name="l_spatula_model" pkg="itasc" type="spatula_model_bremen_1.py" args="/l_spatula" />
  <node name="baker_model" pkg="itasc" type="baker_model.py" args="/table" />

  <!-- Publish relevant poses directly (decouple from realtime node) -->
  <node name="l_spatula_rt_frame" type="tf2pose.py" pkg="motion_viz" args="/l_spatula /l_gripper_tool_frame /l_tool_pose -plain"/>
  <node name="r_spatula_rt_frame" type="tf2pose.py" pkg="motion_viz" args="/r_spatula /r_gripper_tool_frame /r_tool_pose -plain"/>
  <node name="pancake_rt_frame" type="tf2pose.py" pkg="motion_viz" args="/pancake /base_link /object_pose -plain"/>
  <node name="arm_base_rt_frame" type="tf2pose.py" pkg="motion_viz" args="/torso_lift_link /base_link /arm_base_pose -plain"/>
  <node name="robot_base_rt_frame" type="tf2pose.py" pkg="motion_viz" args="/base_link /base_link /robot_base_pose -plain"/>

  <!-- Publish the relevant transforms to tf-->
  <node name="table_transform" pkg="tf" type="static_transform_publisher"
        args="0.1 0.0 -0.763  0 0 0 /pancake /table 100"/>
  <node name="l_spatula_handle_transform" pkg="tf" type="static_transform_publisher"
        args="0.0 0.0 0.0  0.0 0.0 1.57  /l_gripper_tool_frame /l_spatula_handle 100"/>
  <node name="l_spatula_transform" pkg="tf" type="static_transform_publisher"
        args="0.245 0.0 -0.015  0.0 2.1 0.0  /l_spatula_handle /l_spatula 100"/>
  <node name="r_spatula_handle_transform" pkg="tf" type="static_transform_publisher"
    args="-0.01 0.0 0.0 0 0.05 -1.57 /r_gripper_tool_frame /r_spatula_handle 100"/>
  <node name="r_spatula_transform" pkg="tf" type="static_transform_publisher"
    args="0.245 0.0 -0.015 0 2.1 0 /r_spatula_handle /r_spatula 100"/>

  <!-- replace with a pose2tf node for reachability test,
       so the test can set this! -->
  <node name="pancake_transform" pkg="tf" type="static_transform_publisher"
        args="0.734 0.0 0.746  0 0 0 /base_link /pancake 100"/>

  <!-- desired startup configuration of the robot -->
  <!-- the so-called 'bunny configuration' -->
  <rosparam ns="/loopback_controllers/joints">
    name: ['l_shoulder_pan_joint', 'r_shoulder_pan_joint',
           'l_shoulder_lift_joint', 'r_shoulder_lift_joint',
           'l_upper_arm_roll_joint', 'r_upper_arm_roll_joint',
           'l_elbow_flex_joint', 'r_elbow_flex_joint',
           'l_forearm_roll_joint', 'r_forearm_roll_joint',
           'l_wrist_flex_joint', 'r_wrist_flex_joint',
           'l_wrist_roll_joint', 'r_wrist_roll_joint',
           'l_gripper_joint',
           'torso_lift_joint']
    position: [1.05, -1.05,
               0.0, -0.01,
               0.61, -0.61,
              -0.44, -0.44,
              -5.60, 5.60,
              -0.86, -0.87,
               0.16, -2.92,
               0.012,
               0.15]
  </rosparam>

  <!-- startup simulated pr2 -->
  <include file="$(find ias_mechanism_controllers)/launch/pr2_loopback.launch"/>

  <!-- startup feature controller for left arm-->
  <node name="left_arm_feature_controller" launch-prefix="xterm -e gdb -ex run -args" type="constraint_controller" pkg="feature_constraints_standalone">
    <param name="~tool_frame" value="l_gripper_tool_frame"/>
    <param name="~base_frame" value="torso_lift_link"/>
    <param name="~robot_base_frame" value="base_link"/>
    <param name="~map_frame" value="base_link"/>
    <!--param name="~object_frame" value="object"/-->
    <param name="~joint_limit_avoidance" value="false"/>
    <remap from="~qdot" to="/l_arm_vel/command"/>
    <remap from="/left_arm_feature_controller/tool_offset" to="l_tool_pose"/>
    <remap from="/left_arm_feature_controller/object_offset" to="object_pose"/>
    <remap from="/left_arm_feature_controller/arm_offset" to="arm_base_pose"/>
    <remap from="/left_arm_feature_controller/base_pose" to="robot_base_pose"/>
  </node>

  <!-- startup feature controller for right  arm-->
  <node name="right_arm_feature_controller" launch-prefix="xterm -e gdb -ex run -args" type="constraint_controller" pkg="feature_constraints_standalone">
    <param name="~tool_frame" value="r_gripper_tool_frame"/>
    <param name="~base_frame" value="torso_lift_link"/>
    <param name="~robot_base_frame" value="base_link"/>
    <param name="~map_frame" value="base_link"/>
    <param name="~joint_limit_avoidance" value="false"/>
    <remap from="~qdot" to="/r_arm_vel/command"/>
    <remap from="/right_arm_feature_controller/tool_offset" to="r_tool_pose"/>
    <remap from="/right_arm_feature_controller/object_offset" to="object_pose"/>
    <remap from="/right_arm_feature_controller/arm_offset" to="arm_base_pose"/>
    <remap from="/right_arm_feature_controller/base_pose" to="robot_base_pose"/>
  </node>

  <!-- startup the feature visualization -->
  <node name="left_feature_viz" pkg="feature_constraints_utils" type="feature_viz.py" output="screen">
    <param name="~base_frame" value="/pancake"/>
    <remap from="constraint_config" to="/left_arm_feature_controller/constraint_config"/>
  </node>
  <node name="right_feature_viz" pkg="feature_constraints_utils" type="feature_viz.py" output="screen">
    <param name="~base_frame" value="/pancake"/>
    <remap from="constraint_config" to="/right_arm_feature_controller/constraint_config"/>
  </node>

  <!-- startup dummy executive -->
  <node name="feature_controller_executive" type="feature_controller_executive" pkg="feature_constraints_tests" output="screen">
    <param name="~pancake" value="/pancake"/>
    <param name="~spatula" value="/l_spatula"/>
    <remap from="l_constraint_config" to="/left_arm_feature_controller/constraint_config"/>
    <remap from="l_constraint_command" to="/left_arm_feature_controller/constraint_command"/>
    <remap from="l_constraint_state" to="/left_arm_feature_controller/constraint_state"/>
    <remap from="r_constraint_config" to="/right_arm_feature_controller/constraint_config"/>
    <remap from="r_constraint_command" to="/right_arm_feature_controller/constraint_command"/>
    <remap from="r_constraint_state" to="/right_arm_feature_controller/constraint_state"/>
  </node>

 <!-- Start rxplot to see what is going on -->
<!--
 <node name="plotter_pointing_at" type="rxplot" pkg="rxtools" 
   args="-p 25
         -P
         -t 'POINTING-AT CONSTRAINT'
         -l 'lower_boundary','upper_boundary','chi_desired','chi','weight_desired','weight','ydot_desired'
         /left_arm_feature_controller/constraint_command/pos_lo[0],/left_arm_feature_controller/constraint_command/pos_hi[0],/left_arm_feature_controller/constraint_state/chi_desired[0],/left_arm_feature_controller/constraint_state/chi[0]
         /left_arm_feature_controller/constraint_command/weight[0],/left_arm_feature_controller/constraint_state/weights[0],/left_arm_feature_controller/constraint_state/ydot_desired[0]"/>

 <node name="plotter_distance" type="rxplot" pkg="rxtools" 
   args="-p 25
         -P
         -t 'DISTANCE CONSTRAINT'
         -l 'lower_boundary','upper_boundary','chi_desired','chi','weight_desired','weight','ydot_desired'
         /left_arm_feature_controller/constraint_command/pos_lo[1],/left_arm_feature_controller/constraint_command/pos_hi[1],/left_arm_feature_controller/constraint_state/chi_desired[1],/left_arm_feature_controller/constraint_state/chi[1]
         /left_arm_feature_controller/constraint_command/weight[1],/left_arm_feature_controller/constraint_state/weights[1],/left_arm_feature_controller/constraint_state/ydot_desired[1]"/>

 <node name="plotter_align_main" type="rxplot" pkg="rxtools" 
   args="-p 25
         -P
         -t 'ALIGN-MAIN CONSTRAINT'
         -l 'lower_boundary','upper_boundary','chi_desired','chi','weight_desired','weight','ydot_desired'
         /left_arm_feature_controller/constraint_command/pos_lo[2],/left_arm_feature_controller/constraint_command/pos_hi[2],/left_arm_feature_controller/constraint_state/chi_desired[2],/left_arm_feature_controller/constraint_state/chi[2]
         /left_arm_feature_controller/constraint_command/weight[2],/left_arm_feature_controller/constraint_state/weights[2],/left_arm_feature_controller/constraint_state/ydot_desired[2]"/>

 <node name="plotter_height" type="rxplot" pkg="rxtools" 
   args="-p 25
         -P
         -t 'HEIGHT CONSTRAINT'
         -l 'lower_boundary','upper_boundary','chi_desired','chi','weight_desired','weight','ydot_desired'
         /left_arm_feature_controller/constraint_command/pos_lo[3],/left_arm_feature_controller/constraint_command/pos_hi[3],/left_arm_feature_controller/constraint_state/chi_desired[3],/left_arm_feature_controller/constraint_state/chi[3]
         /left_arm_feature_controller/constraint_command/weight[3],/left_arm_feature_controller/constraint_state/weights[3],/left_arm_feature_controller/constraint_state/ydot_desired[3]"/>

 <node name="plotter_align_front" type="rxplot" pkg="rxtools" 
   args="-p 25
         -P
         -t 'ALIGN-FRONT CONSTRAINT'
         -l 'lower_boundary','upper_boundary','chi_desired','chi','weight_desired','weight','ydot_desired'
         /left_arm_feature_controller/constraint_command/pos_lo[4],/left_arm_feature_controller/constraint_command/pos_hi[4],/left_arm_feature_controller/constraint_state/chi_desired[4],/left_arm_feature_controller/constraint_state/chi[4]
         /left_arm_feature_controller/constraint_command/weight[4],/left_arm_feature_controller/constraint_state/weights[4],/left_arm_feature_controller/constraint_state/ydot_desired[4]"/>

 <node name="plotter_facing_spatula_top" type="rxplot" pkg="rxtools" 
   args="-p 25
         -P
         -t 'FACING-SPATULA-TOP CONSTRAINT'
         -l 'lower_boundary','upper_boundary','chi_desired','chi','weight_desired','weight','ydot_desired'
         /left_arm_feature_controller/constraint_command/pos_lo[5],/left_arm_feature_controller/constraint_command/pos_hi[5],/left_arm_feature_controller/constraint_state/chi_desired[5],/left_arm_feature_controller/constraint_state/chi[5]
         /left_arm_feature_controller/constraint_command/weight[5],/left_arm_feature_controller/constraint_state/weights[5],/left_arm_feature_controller/constraint_state/ydot_desired[5]"/>
-->
</launch>
