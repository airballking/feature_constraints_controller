<launch>
  <!-- Publish relevant poses directly (decouple from realtime node) -->
  <node name="spatula_rt_frame" type="tf2pose.py" pkg="motion_viz" args="/spatula /left_arm_7_link /tool_pose -plain"/>
  <node name="pancake_rt_frame" type="tf2pose.py" pkg="motion_viz" args="/pancake /base_link /object_pose -plain"/>

  <!-- Publish the relevant transforms -->
  <node name="table_transform" pkg="tf" type="static_transform_publisher"
        args="0.1 0.0 -0.763  0 0 0 /pancake /table 100"/>
  <node name="spatula_transform" pkg="tf" type="static_transform_publisher"
        args="0.1 -0.22 0.17  2.942 0.0 -1.571  /left_hand_palm /spatula 100"/>

  <!-- replace with a pose2tf node for reachability test,
       so the test can set this! -->
  <node name="pancake_transform" pkg="tf" type="static_transform_publisher"
        args="0.850 0.0 0.763  0 0 0 /base_link /pancake 100"/>

  <!-- Visualizations -->
  <node name="spatula_model" pkg="itasc" type="spatula_model.py" args="/spatula" />
  <node name="baker_model" pkg="itasc" type="baker_model.py" args="/table"/>

  <node name="feature_viz" pkg="stuff" type="feature_viz.py">
    <remap from="/constraint_config" to="/feature_controller/constraint_config"/>
    <param name="base_frame" value="/pancake"/>
  </node>

  <!-- interface with controller ... -->
  <node name="tool_transform" pkg="tf" type="static_transform_publisher"
        args="0 0 0   0 0 0  /spatula /tool 100"/>
  <node name="object_transform" pkg="tf" type="static_transform_publisher"
        args="0 0 0   0 0 0  /pancake /object 100"/>
</launch>
